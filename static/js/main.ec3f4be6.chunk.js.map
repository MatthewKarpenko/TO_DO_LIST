{"version":3,"sources":["apis/axiosConfig.js","actions/index.js","components/NoteCreation.js","components/SnackBar.js","components/AskDeleteModal.js","components/UpdateNote.js","components/NotesList.js","components/App.js","reducers/index.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","fetchNotes","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axiosConfig","get","then","res","type","payload","data","notes","catch","err","stop","_x","apply","this","arguments","NoteCreation","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","title","content","preventDefault","state","postNote","showError","setState","errorMessage","toggleVisibility","showModal","isOpen","visible","getTitle","React","createRef","getContent","bind","assertThisInitialized","textTitle","textContent","closeModal","clearNewPost","firstLetterUpperCase","_this2","prevState","setTimeout","errorVisibility","current","value","target","length","name","wordArray","split","firstLetter","toUpperCase","splice","unshift","upperArray","join","defineProperty","_this3","_this$state","react_default","createElement","Modal","onClose","open","trigger","className","onClick","closeIcon","style","margin","Header","icon","Content","ref","onChange","onBlur","Transition","animation","duration","Component","connect","createdNotes","_ref3","_callee3","_context3","post","response","_x3","ErrorSnackBar","nextProps","status","Message","concat","messageType","AskDeleteModal","deleteNote","noteId","console","log","messageStatus","message","basic","size","headerText","Actions","Button","color","inverted","Icon","SnackBar","deletedNote","id","_ref2","_callee2","_context2","delete","_x2","UpdateNote","updateNote","noteTitle","noteContent","updatedNote","updatedNotes","_ref4","_callee4","_context4","patch","_x4","NotesList","notesArr","activeIndex","note","handleClick","showNotes","titleProps","index","newIndex","map","key","Accordion","Title","active","Dropdown","cursor","Menu","Item","children","components_AskDeleteModal","wholePost","triggerDelete","components_UpdateNote","components_NoteCreation","Segment","existedNotes","reverse","App","components_NotesList","combineReducers","undefined","action","toConsumableArray","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.ec3f4be6.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://159.89.96.181',\r\n    headers: {\"Authorization\": \"Bearer tk25nfhzce216itz16njk1rwyueoroipirot\"}\r\n})","import axiosConfig from \"../apis/axiosConfig\";\r\n\r\nexport const fetchNotes = () => async dispatch => {\r\n  await axiosConfig\r\n    .get(\"/api/v1/notes\")\r\n    .then(res => {\r\n      dispatch({ type: \"FETCH_NOTES\", payload: res.data.notes });\r\n      dispatch({ type: \"FETCH_ERROR\", payload: false });\r\n    })\r\n    .catch(err => dispatch({ type: \"FETCH_ERROR\", payload: true }));\r\n};\r\n\r\nexport const deleteNote = id => async dispatch => {\r\n  await axiosConfig\r\n    .delete(`/api/v1/notes/${id}`, { noteId: id })\r\n    .then(response => {\r\n      dispatch({ type: \"DELETE_NOTE\", payload: response.status });\r\n      dispatch({ type: \"FETCH_ERROR\", payload: false });\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: \"FETCH_ERROR\", payload: true });\r\n    });\r\n};\r\n\r\nexport const postNote = data => async dispatch => {\r\n  await axiosConfig\r\n    .post(\"/api/v1/notes\", data.payload)\r\n    .then(() => {\r\n      dispatch({ type: \"POST_NOTE\", response: data });\r\n      dispatch({ type: \"FETCH_ERROR\", payload: false });\r\n    })\r\n    .catch(err => dispatch({ type: \"FETCH_ERROR\", payload: true }));\r\n};\r\n\r\nexport const updateNote = (data, id) => async dispatch => {\r\n  await axiosConfig\r\n    .patch(`/api/v1/notes/${id}`, data)\r\n    .then(res => {\r\n      console.log(res);\r\n      dispatch({ type: \"FETCH_ERROR\", payload: false });\r\n    })\r\n    .catch(err => dispatch({ type: \"FETCH_ERROR\", payload: true }));\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Header, Modal, Transition } from \"semantic-ui-react\";\r\nimport { postNote, fetchNotes } from \"../actions\";\r\n\r\nclass NoteCreation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      content: \"\",\r\n      showModal: false,\r\n      isOpen: false,\r\n      visible: false\r\n    };\r\n    this.getTitle = React.createRef();\r\n    this.getContent = React.createRef();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.textTitle = this.textTitle.bind(this);\r\n    this.textContent = this.textContent.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n    this.clearNewPost = this.clearNewPost.bind(this);\r\n    this.firstLetterUpperCase = this.firstLetterUpperCase.bind(this);\r\n    this.toggleVisibility = this.toggleVisibility.bind(this);\r\n  }\r\n\r\n  toggleVisibility() {\r\n    this.setState(prevState => ({ visible: !prevState.visible }));\r\n    setTimeout(() => {\r\n      this.setState(prevState => ({ visible: !prevState.visible }));\r\n    }, 2000);\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState({ showModal: false });\r\n  }\r\n\r\n  clearNewPost() {\r\n    this.setState({\r\n      showModal: false,\r\n      title: \"\",\r\n      content: \"\",\r\n      errorMessage: \"\",\r\n      errorVisibility: false\r\n    });\r\n  }\r\n\r\n  textTitle() {\r\n    this.setState({ title: this.getTitle.current.value });\r\n  }\r\n  textContent() {\r\n    this.setState({ content: this.getContent.current.value });\r\n  }\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    if (this.state.title !== \"\" && this.state.content !== \"\") {\r\n      const title = this.state.title;\r\n      const content = this.state.content;\r\n      const data = {\r\n        title,\r\n        content\r\n      };\r\n      await this.props.postNote({ type: \"POST_NOTE\", payload: data });\r\n\r\n      if (this.props.showError) {\r\n        this.setState({\r\n          errorMessage: \"*Something went wrong , please, try again\"\r\n        });\r\n        this.toggleVisibility();\r\n      } else {\r\n        this.props.fetchNotes();\r\n        this.setState({ title: \"\", content: \"\", showModal: false });\r\n      }\r\n    } else {\r\n      this.setState({\r\n        errorMessage: \"*Please fill content and title\"\r\n      });\r\n      this.toggleVisibility();\r\n    }\r\n  };\r\n\r\n  firstLetterUpperCase(e) {\r\n    if (e.target.value.length > 0) {\r\n      let name = e.target.name;\r\n      let wordArray = e.target.value.split(\"\");\r\n      let firstLetter = wordArray[0].toUpperCase();\r\n      wordArray.splice(0, 1);\r\n      wordArray.unshift(firstLetter);\r\n      let upperArray = wordArray.join(\"\");\r\n      e.target.value = upperArray;\r\n\r\n      this.setState({\r\n        [name]: upperArray\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { visible, errorMessage, showModal } = this.state;\r\n    return (\r\n      <div>\r\n        <Modal\r\n          onClose={this.closeModal}\r\n          open={showModal}\r\n          trigger={\r\n            <div className=\"note-creation-holder\">\r\n              <i\r\n                className=\"plus circle icon big modal-creationPost-trigger\"\r\n                onClick={() => this.setState({ showModal: true })}\r\n              />\r\n            </div>\r\n          }\r\n          closeIcon\r\n          style={{ margin: \"auto\" }}\r\n        >\r\n          <Header icon=\"paper plane outline\" content=\"Add new note\" />\r\n\r\n          <Modal.Content>\r\n            <div className=\"content\">\r\n              <div className=\"ui form\">\r\n                <h4 className=\"ui dividing header\">Track your tasks</h4>\r\n\r\n                <div className=\"field\">\r\n                  <label>Title</label>\r\n                  <textarea\r\n                    className=\"title-textarea\"\r\n                    ref={this.getTitle}\r\n                    value={this.state.title}\r\n                    onChange={this.textTitle}\r\n                    onBlur={this.firstLetterUpperCase}\r\n                    name=\"title\"\r\n                  />\r\n                </div>\r\n                <div className=\"field\">\r\n                  <label>Content</label>\r\n                  <textarea\r\n                    ref={this.getContent}\r\n                    value={this.state.content}\r\n                    onChange={this.textContent}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal.Content>\r\n          <Transition visible={visible} animation=\"scale\" duration={300}>\r\n            <p className=\"error\">{errorMessage}</p>\r\n          </Transition>\r\n          <div className=\"actions\">\r\n            <div className=\"ui button\" onClick={this.clearNewPost}>\r\n              Cancel\r\n            </div>\r\n            <div className=\"ui positive button\" onClick={this.handleSubmit}>\r\n              Add\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return { createdNotes: state.createdNotes, showError: state.showError };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { postNote, fetchNotes }\r\n)(NoteCreation);\r\n","import React, { Component } from \"react\";\r\nimport { Message, Transition } from \"semantic-ui-react\";\r\n\r\nclass ErrorSnackBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false\r\n    };\r\n    this.toggleVisibility = this.toggleVisibility.bind(this);\r\n  }\r\n\r\n  toggleVisibility() {\r\n    this.setState(prevState => ({ visible: !prevState.visible }));\r\n    setTimeout(() => {\r\n      this.setState(prevState => ({ visible: !prevState.visible }));\r\n    }, 3000);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.status) {\r\n      this.toggleVisibility();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { visible } = this.state;\r\n    return (\r\n      <Transition visible={visible} animation=\"fade down\" duration={400}>\r\n        <Message className={`${this.props.messageType}  snackBar`}>\r\n          {this.props.content}\r\n          <i\r\n            onClick={this.toggleVisibility}\r\n            className=\"closeMessageIcon icon x icon\"\r\n          />\r\n        </Message>\r\n      </Transition>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorSnackBar;\r\n","import React from \"react\";\r\nimport { Modal, Button, Header, Icon } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { deleteNote, fetchNotes } from \"../actions\";\r\nimport SnackBar from \"./SnackBar\";\r\n\r\nclass AskDeleteModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showModal: false,\r\n      messageStatus: false,\r\n      messageType: \"\",\r\n      message: \"\"\r\n    };\r\n    this.deleteNote = this.deleteNote.bind(this);\r\n  }\r\n\r\n  deleteNote = async () => {\r\n    await this.props.deleteNote(this.props.noteId);\r\n    await console.log(this.props.showError);\r\n    if (!this.props.showError) {\r\n      this.props.fetchNotes();\r\n      this.setState({\r\n        showModal: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        messageStatus: true,\r\n        messageType: \"err-snackBar\",\r\n        message: \"Something went wrong with server, please try again\"\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal\r\n          trigger={\r\n            <i\r\n              className=\"icon trash\"\r\n              onClick={() => {\r\n                this.setState({ showModal: true });\r\n              }}\r\n            />\r\n          }\r\n          basic\r\n          size=\"small\"\r\n          style={{ margin: \"auto\" }}\r\n          open={this.state.showModal}\r\n        >\r\n          <Header icon={this.props.icon} content={this.props.headerText} />\r\n\r\n          <Modal.Actions>\r\n            <Button\r\n              basic\r\n              color=\"red\"\r\n              onClick={() => {\r\n                this.setState({ showModal: false });\r\n              }}\r\n              inverted\r\n            >\r\n              <Icon name=\"remove\" /> No\r\n            </Button>\r\n            <Button\r\n              onClick={this.deleteNote}\r\n              color=\"blue\"\r\n              style={{ color: \"white\" }}\r\n              inverted\r\n            >\r\n              <Icon name=\"checkmark\" /> Yes\r\n            </Button>\r\n          </Modal.Actions>\r\n          <SnackBar\r\n            status={this.state.messageStatus}\r\n            messageType={this.state.messageType}\r\n            content={this.state.message}\r\n          />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { deletedNote: state.deleteNote, showError: state.showError };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { deleteNote, fetchNotes }\r\n)(AskDeleteModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Header, Modal, Transition } from \"semantic-ui-react\";\r\n\r\nimport { updateNote, fetchNotes } from \"../actions\";\r\n\r\nclass UpdateNote extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: this.props.noteTitle,\r\n      content: this.props.noteContent,\r\n      showModal: false,\r\n      isOpen: false,\r\n      visible: false\r\n    };\r\n    this.getTitle = React.createRef();\r\n    this.getContent = React.createRef();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.textTitle = this.textTitle.bind(this);\r\n    this.textContent = this.textContent.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n    this.clearNewPost = this.clearNewPost.bind(this);\r\n    this.firstLetterUpperCase = this.firstLetterUpperCase.bind(this);\r\n    this.toggleVisibility = this.toggleVisibility.bind(this);\r\n  }\r\n  toggleVisibility() {\r\n    this.setState(prevState => ({ visible: !prevState.visible }));\r\n    setTimeout(() => {\r\n      this.setState(prevState => ({ visible: !prevState.visible }));\r\n    }, 2000);\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState({ showModal: false });\r\n  }\r\n\r\n  clearNewPost() {\r\n    this.setState({\r\n      showModal: false,\r\n      title: \"\",\r\n      content: \"\",\r\n      errorMessage: \"\",\r\n      errorVisibility: false\r\n    });\r\n  }\r\n\r\n  textTitle() {\r\n    this.setState({ title: this.getTitle.current.value });\r\n  }\r\n  textContent() {\r\n    this.setState({ content: this.getContent.current.value });\r\n  }\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    console.log(this.props.noteId);\r\n    if (this.state.title !== \"\" && this.state.content !== \"\") {\r\n      const title = this.state.title;\r\n      const content = this.state.content;\r\n      const data = {\r\n        title,\r\n        content\r\n      };\r\n      await this.props.updateNote(data, this.props.noteId);\r\n\r\n      if (this.props.showError) {\r\n        this.setState({\r\n          errorMessage: \"*Something went wrong , please, try again\"\r\n        });\r\n        this.toggleVisibility();\r\n      } else {\r\n        this.props.fetchNotes();\r\n        this.setState({ title: \"\", content: \"\", showModal: false });\r\n      }\r\n    } else {\r\n      this.setState({\r\n        errorMessage: \"*Please fill content and title\"\r\n      });\r\n      this.toggleVisibility();\r\n    }\r\n  };\r\n\r\n  firstLetterUpperCase(e) {\r\n    if (e.target.value.length > 0) {\r\n      let name = e.target.name;\r\n      let wordArray = e.target.value.split(\"\");\r\n      let firstLetter = wordArray[0].toUpperCase();\r\n      wordArray.splice(0, 1);\r\n      wordArray.unshift(firstLetter);\r\n      let upperArray = wordArray.join(\"\");\r\n      e.target.value = upperArray;\r\n\r\n      this.setState({\r\n        [name]: upperArray\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { visible, errorMessage, showModal } = this.state;\r\n    return (\r\n      <Modal\r\n        onClose={this.closeModal}\r\n        open={showModal}\r\n        trigger={\r\n          <i\r\n            className=\"sync icon \"\r\n            onClick={() => this.setState({ showModal: true })}\r\n          />\r\n        }\r\n        closeIcon\r\n        style={{ margin: \"auto\" }}\r\n      >\r\n        <Header icon=\"paper plane outline\" content=\"Add new note\" />\r\n\r\n        <Modal.Content>\r\n          <div className=\"content\">\r\n            <div className=\"ui form\">\r\n              <h4 className=\"ui dividing header\">Track your tasks</h4>\r\n\r\n              <div className=\"field\">\r\n                <label>Title</label>\r\n                <textarea\r\n                  className=\"title-textarea\"\r\n                  ref={this.getTitle}\r\n                  value={this.state.title}\r\n                  onChange={this.textTitle}\r\n                  onBlur={this.firstLetterUpperCase}\r\n                  name=\"title\"\r\n                />\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>Content</label>\r\n                <textarea\r\n                  value={this.state.content}\r\n                  ref={this.getContent}\r\n                  onChange={this.textContent}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Content>\r\n        <Transition visible={visible} animation=\"scale\" duration={300}>\r\n          <p className=\"error\">{errorMessage}</p>\r\n        </Transition>\r\n        <div className=\"actions\">\r\n          <div className=\"ui button\" onClick={this.clearNewPost}>\r\n            Cancel\r\n          </div>\r\n          <div className=\"ui positive button\" onClick={this.handleSubmit}>\r\n            Add\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { updatedNote: state.updatedNotes, showError: state.showError };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateNote, fetchNotes }\r\n)(UpdateNote);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Accordion, Icon, Segment, Dropdown } from \"semantic-ui-react\";\r\n\r\nimport NoteCreation from \"./NoteCreation\";\r\nimport { fetchNotes } from \"../actions\";\r\nimport AskDeleteModal from \"./AskDeleteModal\";\r\nimport SnackBar from \"./SnackBar\";\r\nimport UpdateNote from \"./UpdateNote\";\r\n\r\nclass NotesList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      notesArr: [],\r\n      activeIndex: 0,\r\n      messageStatus: false,\r\n      message: \"\"\r\n    };\r\n    this.note = React.createRef();\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.showNotes = this.showNotes.bind(this);\r\n  }\r\n\r\n  handleClick(e, titleProps) {\r\n    const { index } = titleProps;\r\n    const { activeIndex } = this.state;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n\r\n    this.setState({ activeIndex: newIndex });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.props.fetchNotes();\r\n    if (typeof this.props.notes[0] === \"string\") {\r\n      this.setState({\r\n        messageStatus: true,\r\n        message: \"Something went wrong with server, please reload the page\"\r\n      });\r\n    }\r\n  }\r\n\r\n  showNotes() {\r\n    return this.props.notes.map((post, index) => {\r\n      return (\r\n        <div key={post.id} id={post.id} className=\"note-title-container\">\r\n          <Accordion.Title\r\n            active={this.state.activeIndex === index}\r\n            index={index}\r\n            onClick={this.handleClick}\r\n            className=\"note-title\"\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            {post.title}\r\n          </Accordion.Title>\r\n          <Accordion.Content\r\n            className=\"note-content\"\r\n            active={this.state.activeIndex === index}\r\n          >\r\n            <p>{post.content}</p>\r\n          </Accordion.Content>\r\n\r\n          <Dropdown\r\n            className=\"modal-editing-trigger \"\r\n            icon=\"ellipsis vertical\"\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                children={\r\n                  <AskDeleteModal\r\n                    trigger={<i className=\"icon trash\" />}\r\n                    icon=\"trash\"\r\n                    headerText=\"Do you want to delete this note ?\"\r\n                    ref={this.wholePost}\r\n                    triggerDelete={this.triggerDelete}\r\n                    noteId={post.id}\r\n                  />\r\n                }\r\n              />\r\n              <Dropdown.Item\r\n                children={\r\n                  <UpdateNote\r\n                    noteId={post.id}\r\n                    noteContent={post.content}\r\n                    noteTitle={post.title}\r\n                  />\r\n                }\r\n              />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NoteCreation />\r\n        <div className=\"notes-position\">\r\n          <Segment className=\"notes-holder\" inverted>\r\n            <Accordion inverted>{this.showNotes()}</Accordion>\r\n          </Segment>\r\n        </div>\r\n        <SnackBar\r\n          status={this.props.showError}\r\n          messageType={\"err-snackBar\"}\r\n          content={\"Something went wrong with server, please reload the page\"}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { notes: state.existedNotes.reverse(), showError: state.showError };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchNotes }\r\n)(NotesList);\r\n","import React from \"react\";\n\nimport NotesList from \"./NotesList\";\nimport NoteCreation from \"./NoteCreation\";\nimport \"../app.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"app-name\">\n        List\n        \n      </h1>\n\n      <div className=\"main-components\">\n        \n        <NotesList />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\n\r\nconst fetchAllNotes = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_NOTES\":\r\n      return [...action.payload];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst showError = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_ERROR\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst createNote = (state = [], action) => {\r\n  return state;\r\n};\r\n\r\nconst deleteNote = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_NOTE\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  existedNotes: fetchAllNotes,\r\n  createdNotes: createNote,\r\n  deleteNote: deleteNote,\r\n  showError\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nconst store = createStore(reducers, applyMiddleware(thunk));\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}